c
sticker_belongs_to_current_member?
!sticker_belongs_to_current_member?
c
sticker
c
sticker
c
s = Sticker.create(member: @member, sticker_number: session[:number], sticker_variation: params[:color], payment_code: params[:code])
c
s = Sticker.create(member: @member, sticker_number: session[:number], sticker_variation: params[:color], payment_code: params[:code])
c
s = Sticker.create(member: @member, sticker_number: session[:number], sticker_variation: params[:color], payment_code: params[:code])
c
s = Sticker.create(member: @member, sticker_number: session[:number], sticker_variation: params[:color], payment_code: params[:code])
c
s = Sticker.create(member: @member, sticker_number: session[:number], sticker_variation: params[:color], payment_code: params[:code])
c
C
c
s.errors
s = Sticker.create(member: @member, sticker_number: session[:number], sticker_variation: params[:color], payment_code: params[:code])
c
!@member.stickers.empty?
Sticker.all.pluck(:member_id)
c
Sticker.destroy_all
Sticker.all.pluck(:member_id)
Sticker.all
!@member.stickers.empty?
c
session[:additional_sticker]
c
worksheet.rows.second
c
session.files
session.inspect
session
c
worksheet
c
sticker.create(sticker_number: session[:number], sticker_variation: params[:color])
@member.stickers.create(sticker_number: session[:number], sticker_variation: params[:color])
@member.sticker.create(sticker_number: session[:number], sticker_variation: params[:color])
@member.sticker
@member = Member.find_by_email(session[:email])
s.errors
s = @member&.sticker&.create(sticker_number: session[:number], sticker_variation: params[:color])
Sticker.count
@member&.sticker&.create(sticker_number: session[:number], sticker_variation: params[:color])
c
params[:color]
session[:email]
